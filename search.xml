<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[添加一个萌物]]></title>
    <url>%2F2017%2F12%2F08%2F%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%90%8C%E7%89%A9%2F</url>
    <content type="text"><![CDATA[首先进入作者的GitHub，看看使用方法。 链接：hexo-helper-live2d 安装1npm install --save hexo-helper-live2d 配置找到hexo根目录下的_config.yml文件在最后加上12345678910111213141516# Live2D## https://github.com/EYHN/hexo-helper-live2dlive2d: model: z16 # 模型名称 默认值: z16 width: 150 # 宽度 默认值: 150 height: 300 # 高度 默认值: 300 scaling: 1 # 分辨率缩放倍率 默认值: 2 opacityDefault: 0.7 # 初始的透明度 默认值: 0.7 opacityHover: 1 # 鼠标悬浮时的透明度 默认值: 1 mobileShow: true # 是否在移动设备上显示 默认值: true mobileScaling: 0.5 # 移动设备缩放倍率 默认值: 0.5 position: right # 模型左右侧放置位置 默认值: right horizontalOffset: 0 # 元素的水平偏移 默认值: 0 verticalOffset: -20 # 元素的底部偏移 默认值: -20 id: live2dcanvas # 元素的id 默认值: live2dcanvas deviceJsSource: local # current-device 脚本的来源 默认值: local 这段代码也可以直接从作者的链接上找到，上面有详细的参数介绍。重点是修改model: z16的值，我用的是hijiki这个灰色小猫的模型。 生效最后在\Hexo\themes\next\layout\_layout.swig文件中&lt;/body&gt;的上方加上这行代码1&#123;&#123; live2d() &#125;&#125; 最后，就如你在我的博客左下角所看到的那只有动画效果的灰色小猫咯。]]></content>
      <tags>
        <tag>-Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码块的测试]]></title>
    <url>%2F2017%2F12%2F07%2F%E4%BB%A3%E7%A0%81%E5%9D%97%E7%9A%84%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[捣鼓了半天，发现代码高亮一直是黑白状态。没有颜色的变化。 1234567891011def get_id_detail(id): &quot;&quot;&quot;根据歌单id获取歌单详细信息&quot;&quot;&quot; global headers print(&apos;fetching&apos;, id) url = &apos;http://music.163.com/api/playlist/detail?id=&#123;&#125;&amp;updateTime=-1&apos;.format(id) req = requests.get(url, headers=headers) detail = req.json() # print(detail) print(&apos;mongo&apos;, id) col_playlists.update(&#123;&apos;id&apos;: id&#125;, &#123;&apos;$set&apos;: detail[&apos;result&apos;]&#125;, upsert=True) print(&apos;done&apos;, id) 原来只要在’’’的开头加上你所用的语言名称就可以了！如&#39;&#39;&#39;pytho &#39;&#39;&#39; 效果如下：123456789101112def get_id_detail(id): """根据歌单id获取歌单详细信息""" global headers print('fetching', id) url = 'http://music.163.com/api/playlist/detail?id=&#123;&#125;&amp;updateTime=-1'.format(id) req = requests.get(url, headers=headers) detail = req.json() # print(detail) print('mongo', id) col_playlists.update(&#123;'id': id&#125;, &#123;'$set': detail['result']&#125;, upsert=True) print('done', id)]]></content>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇博客]]></title>
    <url>%2F2017%2F12%2F05%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[折腾了两天，看着crossin老师的教程，终于通过hexo+GitHub的方式把这个属于自己Blog弄出来了。总结一下学到的东西吧~ 学会了git的用法，创建了自己的GitHub Pages。 学会了hexo的用法，hexo更新命令： 1hexo g -d 学会了配置hexo主题，主题中的头像的修改，一些简介的修改，一些链接的设置等。]]></content>
  </entry>
</search>
